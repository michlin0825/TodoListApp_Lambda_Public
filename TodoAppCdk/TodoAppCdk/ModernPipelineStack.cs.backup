using Amazon.CDK;
using Amazon.CDK.Pipelines;
using Constructs;

namespace TodoAppCdk
{
    /// <summary>
    /// L3 CDK Pipelines implementation - replaces 343 lines with ~60 lines (80% reduction)
    /// Modern, self-mutating pipeline with built-in best practices
    /// </summary>
    public class ModernPipelineStack : Stack
    {
        internal ModernPipelineStack(Construct scope, string id, IStackProps props) : base(scope, id, props)
        {
            // L3 CDK Pipeline - handles source, build, test, deploy automatically
            var pipeline = new CodePipeline(this, "TodoModernPipeline", new CodePipelineProps
            {
                PipelineName = "TodoList-Modern-CI-CD-Pipeline",
                
                // Self-mutation: Pipeline updates itself when CDK code changes
                SelfMutation = true,
                
                // Cross-account deployment support
                CrossAccountKeys = true,
                
                // Source configuration
                Synth = new ShellStep("Synth", new ShellStepProps
                {
                    // GitHub source with CodeStar connection
                    Input = CodePipelineSource.Connection("michlin0825/TodoListApp_Lambda", "main", 
                        new ConnectionSourceOptions
                        {
                            ConnectionArn = "arn:aws:codeconnections:us-east-1:111735445051:connection/7d72fc73-18b2-4aa6-b21f-346b381c97d8"
                        }),
                    
                    // Build commands - handles .NET build and CDK synth
                    Commands = new[]
                    {
                        // .NET Backend build
                        "echo 'üî® Building .NET 8 Backend...'",
                        "cd Backend",
                        "dotnet restore",
                        "dotnet build --configuration Release",
                        "dotnet publish -c Release -f net8.0",
                        "echo '‚úÖ Backend build completed'",
                        
                        // CDK synthesis
                        "echo 'üèóÔ∏è Synthesizing CDK templates...'",
                        "cd ../TodoAppCdk",
                        "npm install -g aws-cdk@latest",
                        "dotnet restore TodoAppCdk/TodoAppCdk.csproj",
                        "cdk synth",
                        "echo '‚úÖ CDK synthesis completed'"
                    },
                    
                    // Primary output directory
                    PrimaryOutputDirectory = "TodoAppCdk/cdk.out"
                })
            });

            // Add production deployment stage with manual approval
            var prodStage = new TodoAppStage(this, "Production", new StageProps
            {
                Env = new Amazon.CDK.Environment
                {
                    Account = Account,
                    Region = Region ?? "us-east-1"
                }
            });

            // Add stage to pipeline with manual approval step
            pipeline.AddStage(prodStage, new AddStageOpts
            {
                // Manual approval before production deployment
                Pre = new[]
                {
                    new ManualApprovalStep("ReviewAndApprove", new ManualApprovalStepProps
                    {
                        Comment = @"
üîç **Production Deployment Review Required**

Please review the following before approving:
‚Ä¢ Code changes in the GitHub repository  
‚Ä¢ Build artifacts and test results
‚Ä¢ Infrastructure changes in CDK diff

**Current Application URLs:**
‚Ä¢ Frontend: http://todo-app-frontend-cloudchef01-us-cdk.s3-website-us-east-1.amazonaws.com
‚Ä¢ API: https://g3zokr6lo4.execute-api.us-east-1.amazonaws.com/prod/api/todos

**Review Checklist:**
‚úÖ Code changes reviewed
‚úÖ No security vulnerabilities  
‚úÖ Infrastructure changes validated
‚úÖ Ready for production deployment

Click 'Approve' to proceed with deployment or 'Reject' to stop the pipeline.
                        "
                    })
                },
                
                // Post-deployment validation
                Post = new[]
                {
                    new ShellStep("ValidateDeployment", new ShellStepProps
                    {
                        Commands = new[]
                        {
                            "echo 'üß™ Validating production deployment...'",
                            "curl -f https://g3zokr6lo4.execute-api.us-east-1.amazonaws.com/prod/api/todos || exit 1",
                            "echo '‚úÖ Production deployment validated'"
                        }
                    })
                }
            });

            // Pipeline outputs
            new CfnOutput(this, "PipelineName", new CfnOutputProps
            {
                Description = "Name of the Modern CDK Pipeline",
                Value = pipeline.PipelineName,
                ExportName = "TodoList-ModernPipelineName"
            });

            new CfnOutput(this, "PipelineUrl", new CfnOutputProps
            {
                Description = "URL of the Modern CDK Pipeline in AWS Console",
                Value = $"https://console.aws.amazon.com/codesuite/codepipeline/pipelines/{pipeline.PipelineName}/view",
                ExportName = "TodoList-ModernPipelineUrl"
            });
        }
    }

    /// <summary>
    /// Application stage for CDK Pipelines - represents a deployable unit
    /// </summary>
    public class TodoAppStage : Stage
    {
        internal TodoAppStage(Construct scope, string id, IStageProps props) : base(scope, id, props)
        {
            // Deploy the main application stack
            var appStack = new TodoAppStack(this, "TodoAppStack", new StackProps
            {
                Env = props.Env
            });
        }
    }
}
